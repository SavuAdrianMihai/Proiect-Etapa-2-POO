Starting audit...
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\common\Constants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Distributor.java:116:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getEnergyNeededKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getEnergyNeededKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Distributor.java:120:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getProducerStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getProducerStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Distributor.java:124:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getContractCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getContractCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Distributor.java:128:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setContractCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setContractCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Distributor.java:132:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:30:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:34:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:38:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getMaxDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getMaxDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:42:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:46:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:50:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:54:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getCurrentDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getCurrentDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:58:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\fileio\Producer.java:77:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\filesinteractions\InputLoader.java:4:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\filesinteractions\PrintEntities.java:46:5: Class 'PrintEntities' looks like designed for extension (can be subclassed), but the method 'printMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PrintEntities' final or making the method 'printMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\filesinteractions\PrintEntities.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\formulas\Formulas.java:55:80: '*' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\formulas\Formulas.java:65:58: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\strategies\EnergyChoiceStrategyType.java:10:25: Variable 'label' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\updates\EnergyPerDistributorChanges.java:12:5: Class 'EnergyPerDistributorChanges' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EnergyPerDistributorChanges' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\updates\EnergyPerDistributorChanges.java:16:5: Class 'EnergyPerDistributorChanges' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EnergyPerDistributorChanges' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Savu\Desktop\proiect-etapa2-energy-system\.\src\updates\MonthlyUpdates.java:27:5: Class 'MonthlyUpdates' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributorChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdates' final or making the method 'getEnergyPerDistributorChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 27 errors.
